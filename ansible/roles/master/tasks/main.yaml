
  - name: Check port 6443
    shell: ss -tulnp | grep 6443
    register: port
    ignore_errors: true

  - name: Create kubeadm-config
    template:
      src: kubeadm-config.yaml.j2
      dest: /root/kubeadm-config.yaml

  - name: Create static pod directory
    file:
      path: /etc/kubernetes/manifests
      state: directory

  - name: Create kubevip-manifest
    template:
      src: kubevip-config.yaml.j2
      dest: /etc/kubernetes/manifests/kubevip.yaml


  - name: Start cluster by kubeadm
    delegate_to: "{{ groups['master'][0] }}"
    shell: kubeadm init --config /root/kubeadm-config.yaml
    when: port.stdout == ""
    register: init_cluster
    run_once: true

  - name: Add a line to a file 
    ansible.builtin.lineinfile:
      path: /etc/environment
      line: KUBECONFIG="/etc/kubernetes/admin.conf"
   
  - name: Export kubeconfig to create resources
    shell: export KUBECONFIG="/etc/kubernetes/admin.conf"
    
  - name: Deploy calico network plugin
    shell: kubectl create -f https://projectcalico.docs.tigera.io/manifests/tigera-operator.yaml && kubectl create -f https://projectcalico.docs.tigera.io/manifests/custom-resources.yaml
    delegate_to: "{{ groups['master'][0] }}"
    when: init_cluster is not skipped
    run_once: true

  - name: Generate vars for join
    shell: kubeadm token create --print-join-command 
    delegate_to: "{{ groups['master'][0] }}"
    register: kubeadm_join


  - name: Create kubeadm token for
    command: "kubeadm token create"
    register: kubeadm_token
    delegate_to: "{{ groups['master'][0] }}"
    run_once: true
    changed_when: false

  - name: Set kubeadm token
    set_fact:
      kubeadm_token: "{{ kubeadm_token.stdout }}"


  - name: Create kubeadm cert for join
    shell: "kubeadm init phase upload-certs --upload-certs | tail -n 1"
    register: kubeadm_cert
    delegate_to: "{{ groups['master'][0] }}"
    run_once: true
    changed_when: false

  - name: Set kubeadm cert 
    set_fact:
      kubeadm_cert: "{{ kubeadm_cert.stdout }}"
  
  - name: Create kubeadm cert hash
    shell: "kubeadm token create --print-join-command | awk '{print $7}' | awk -F':' '{print $2}'"
    register: kubeadm_cert_hash
    delegate_to: "{{ groups['master'][0] }}"
    run_once: true
    changed_when: false
   
  - name: Set kubeadm cert hash
    set_fact:
      kubeadm_cert_hash: "{{ kubeadm_cert_hash.stdout }}"

  - name: Kubeadm join other masters
    block:
      - name: Create kubeadm-join conf for masters
        template:
          src: kubeadm-join-cluster-master.yaml.j2
          dest: /tmp/kubeadm-join-master.yaml

      - name: Join master nodes to cluster
        command: kubeadm join --config /tmp/kubeadm-join-master.yaml 
        register: kubeadm_join
        changed_when: kubeadm_join is success
    when: inventory_hostname !=  "{{ groups['master'][0] }}" 


    